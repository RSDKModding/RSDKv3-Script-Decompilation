//------------Sonic CD ActFinish Script-------------//
//--------Scripted by Christian Whitehead 'The Taxman'--------//
//-------Unpacked By Rubberduckycooly's Script Unpacker-------//

// Aliases
#alias 4: TYPE_ACTFINISH
#alias Object.Value0	:	Object.Timer		// Also used for fading
#alias Object.Value1	:	Object.MainTextXOffSet
#alias Object.Value2	:	Object.ScoreXOffSet
#alias Object.Value3	:	Object.RingsXOffSet
#alias Object.Value4	:	Object.TimeXOffSet
#alias Object.Value5	:	Object.TimeBonus
#alias Object.Value6	:	Object.RingBonus

#alias Player.Value0	:	Player.Rings

// States
#alias 0	:	ACTFINISH_SETBONUS
#alias 1	:	ACTFINISH_SCROLLTEXT
#alias 2	:	ACTFINISH_TALLYDELAY
#alias 3	:	ACTFINISH_SCORETALLY
#alias 4	:	ACTFINISH_LOAD_DELAY
#alias 5	:	ACTFINISH_LOAD_NEXT_LEVEL

// Engine & Callbacks
#alias 11	:	CALLBACK_TRIAL_ENDED

// Game Modes
#alias 1	:	GAMEMODE_MAINGAME
#alias 2	:	GAMEMODE_TIMEATTACK
#alias 3	:	GAMEMODE_TRIALGAME

sub ObjectMain
	switch Object.State
	case ACTFINISH_SETBONUS
		Object.XPos = -799
		Object.MainTextXOffSet = 1168
		Object.ScoreXOffSet = 1255
		Object.RingsXOffSet = 1319
		Object.TimeXOffSet = 1402
		Object.State = ACTFINISH_SCROLLTEXT

		switch Stage.Minutes
		case 0
			if Stage.Seconds < 30
				Object.TimeBonus = 50000
			else
				if Stage.Seconds < 45
					Object.TimeBonus = 10000
				else
					Object.TimeBonus = 5000
				end if
			end if
			break

		case 1
			if Stage.Seconds < 30
				Object.TimeBonus = 4000
			else
				Object.TimeBonus = 3000
			end if
			break
			
		case 2
			Object.TimeBonus = 2000
			break

		case 3
			Object.TimeBonus = 1000
			break

		case 4
			Object.TimeBonus = 500
			break

		case 5
			Object.TimeBonus = 100
			break

		end switch
		Object.RingBonus = Player.Rings
		Object.RingBonus *= 100
		break

	case ACTFINISH_SCROLLTEXT
		TempValue0 = Screen.CenterX
		TempValue0 -= 68
		if Object.XPos < TempValue0
			Object.XPos += 16
			if Object.XPos > TempValue0
				Object.XPos = TempValue0
			end if
		else
			Object.XPos = TempValue0
		end if

		TempValue0 -= 32
		if Object.MainTextXOffSet > TempValue0
			Object.MainTextXOffSet -= 16
			if Object.MainTextXOffSet < TempValue0
				Object.MainTextXOffSet = TempValue0
			end if
		else
			Object.MainTextXOffSet = TempValue0
		end if

		TempValue0 += 9
		if Object.ScoreXOffSet > TempValue0
			Object.ScoreXOffSet -= 16
			if Object.ScoreXOffSet < TempValue0
				Object.ScoreXOffSet = TempValue0
			end if
		else
			Object.ScoreXOffSet = TempValue0
		end if

		if Object.RingsXOffSet > TempValue0
			Object.RingsXOffSet -= 16
			if Object.RingsXOffSet < TempValue0
				Object.RingsXOffSet = TempValue0
			end if
		else
			Object.RingsXOffSet = TempValue0
		end if

		if Object.TimeXOffSet > TempValue0
			Object.TimeXOffSet -= 16
			if Object.TimeXOffSet < TempValue0
				Object.TimeXOffSet = TempValue0
			end if
		else
			Object.TimeXOffSet = TempValue0
			Object.State = ACTFINISH_TALLYDELAY
			Object.Timer = 0
		end if
		break

	case ACTFINISH_TALLYDELAY
		Object.Timer++
		if Options.Soundtrack == 0
			if Object.Timer > 299
				Object.Timer = 0
				Object.State = ACTFINISH_SCORETALLY
				// Paradise Found Unlock Criteria
				if Stage.PlayerListPos == 0
					if Object[24].PropertyValue == 2
						if Stage.DebugMode == 0
							SetAchievement(2, 100)
						end if
					end if
				end if
			end if
		else
			if Object.Timer > 429
				Object.Timer = 0
				Object.State = ACTFINISH_SCORETALLY
				// Paradise Found Unlock Criteria
				if Stage.PlayerListPos == 0
					if Object[24].PropertyValue == 2
						if Stage.DebugMode == 0
							SetAchievement(2, 100)
						end if
					end if
				end if
			end if
		end if
		break

	case ACTFINISH_SCORETALLY
		if Object.RingBonus > 0
			Object.RingBonus -= 100
			Player.Score += 100
		end if

		if Object.TimeBonus > 0
			Object.TimeBonus -= 100
			Player.Score += 100
		end if

		CheckGreater(Object.RingBonus, 0)
		TempValue0 = CheckResult
		CheckGreater(Object.TimeBonus, 0)
		TempValue0 |= CheckResult
		//Check if the tally ended
		if TempValue0 == true
			Object.Timer++
			if Object.Timer == 2
				PlaySfx(16, 0)
				Object.Timer = 0
			end if
		else
			Object.State = ACTFINISH_LOAD_DELAY
			Object.Timer = 0
			PlaySfx(17, 0)
		end if
		break

	case ACTFINISH_LOAD_DELAY
		Object.Timer++
		if Object.Timer == 160
			Object.Timer = 0
			Object.State = ACTFINISH_LOAD_NEXT_LEVEL
			if Object[0].Type == TypeName[BlankObject]
				PlaySfx(19, 0)
			end if
		end if
		break
	case 5
		if Object[0].Type == TypeName[BlankObject]	// Check if the player entered the Special Ring
			Object.Timer += 8
			SetScreenFade(208, 255, 224, Object.Timer)
			if Engine.TrialMode == true
				if Object.Timer == 1016
					EngineCallback(CALLBACK_TRIAL_ENDED)
				end if
			end if
			if Object.Timer == 1024
#platform: Standard
				if Stage.PlayerListPos == 0				// Set Leaderboard score (Steam)
					TempValue0 = Stage.ListPos
					TempValue0 %= 10
					TempValue0 >>= 2

					TempValue1 = Stage.ListPos
					TempValue1 /= 10
					TempValue1 *= 3

					TempValue0 += TempValue1
					TempValue0++

					TempValue1 = Stage.Seconds
					TempValue1 *= 100

					TempValue2 = Stage.Minutes
					TempValue2 *= 6000

					TempValue1 += TempValue2
					TempValue1 += Stage.MilliSeconds
					SetLeaderboard(TempValue0, TempValue1)
				end if
#endplatform
				Fade_Colour = 208
				Fade_Colour <<= 16

				TempValue0 = 255
				TempValue0 <<= 8
				Fade_Colour += TempValue0
				Fade_Colour += 224

				Player.Direction = FACING_RIGHT
				Object.Timer = 0
				LampPost.Check = 0
				Good_Future_Count += Good_Future
				Good_Future = 0
				Transporter_Destroyed = 0
				MetalSonic_Destroyed = 0

				if Stage.ActNo == 2
					if Good_Future_Count < 2
						Stage.ListPos++
					end if
				end if
				if Stage.ActNo == 3
					Good_Future_Count = 0
				end if
				switch Object[24].PropertyValue
				case 0
					Stage.ListPos += 4		// Present to Present
					break
				case 1
					Stage.ListPos += 3		// Past to Present
					break
				case 2
					Stage.ListPos += 2		// Good Future to Present
					break
				case 3
					Stage.ListPos++			// Bad Future to Present
					break
				end switch

				if Options.GameMode == GAMEMODE_MAINGAME
					ArrayPos1 = Options.SaveSlot
					ArrayPos1 <<= 3
					SaveRAM[ArrayPos1] = Stage.PlayerListPos
					ArrayPos1++
					SaveRAM[ArrayPos1] = Player.Lives
					ArrayPos1++
					SaveRAM[ArrayPos1] = Player.Score
					ArrayPos1++
					SaveRAM[ArrayPos1] = Stage.ListPos
					SaveRAM[ArrayPos1] += 81	// This makes the save know you're in a special stage
					ArrayPos1++
					SaveRAM[ArrayPos1] = SpecialStage.TimeStones
					ArrayPos1++
					SaveRAM[ArrayPos1] = SpecialStage.ListPos
					ArrayPos1++
					SaveRAM[ArrayPos1] = Player.ScoreBonus
					ArrayPos1++
					SaveRAM[ArrayPos1] = MetalSonic_List
					SaveRAM[ArrayPos1] <<= 16
					SaveRAM[ArrayPos1] += Good_Future_List
					WriteSaveRAM()
				end if

				SpecialStage.NextZone = Stage.ListPos
				Stage.ListPos = SpecialStage.ListPos
				Stage.ActiveList = SPECIAL_STAGE
				TempValue0 = Engine.TrialMode
				if Stage.ListPos >= Stage.ListSize	// tldr; check if you are playing the trial
					TempValue0 = true
				end if
				if TempValue0 == false
					LoadStage()
				else
					Stage.ActiveList = PRESENTATION_STAGE
					Stage.ListPos = 1	// Menu
					LoadStage()
				end if
			end if
		else
			Object.Timer += 4
			SetScreenFade(0, 0, 0, Object.Timer)
			if Engine.TrialMode == true
				if Object.Timer == 380
					EngineCallback(CALLBACK_TRIAL_ENDED)
				end if
			end if
			if Object.Timer == 384
#platform: Standard
				if Stage.PlayerListPos == 0		// PlayerName[SONIC]
					TempValue0 = Stage.ListPos
					TempValue0 %= 10
					TempValue0 >>= 2
					TempValue1 = Stage.ListPos
					TempValue1 /= 10
					TempValue1 *= 3
					TempValue0 += TempValue1
					TempValue0++
					TempValue1 = Stage.Seconds
					TempValue1 *= 100
					TempValue2 = Stage.Minutes
					TempValue2 *= 6000
					TempValue1 += TempValue2
					TempValue1 += Stage.MilliSeconds
					SetLeaderboard(TempValue0, TempValue1)
				end if
#endplatform
				Fade_Colour = 0
				Object.Timer = 0
				LampPost.Check = 0
				Player.Direction = FACING_RIGHT
				Good_Future_Count += Good_Future
				Good_Future = 0
				Transporter_Destroyed = 0
				MetalSonic_Destroyed = 0

				if Stage.ActNo == 2
					if Good_Future_Count < 2
						Stage.ListPos++		// Set next stage to good future 3
					end if
				end if

				if Stage.ActNo == 3
					Good_Future_Count = 0
				end if

				switch Object[24].PropertyValue
				case 0
					Stage.ListPos += 4		// Present to Present
					break
				case 1
					Stage.ListPos += 3		// Past to Present
					break
				case 2
					Stage.ListPos += 2		// Good Future to Present
					break
				case 3
					Stage.ListPos++			// Bad Future to Present
					break
				end switch

				if Options.GameMode == GAMEMODE_MAINGAME
					ArrayPos1 = Options.SaveSlot
					ArrayPos1 <<= 3
					SaveRAM[ArrayPos1] = Stage.PlayerListPos
					ArrayPos1++
					SaveRAM[ArrayPos1] = Player.Lives
					ArrayPos1++
					SaveRAM[ArrayPos1] = Player.Score
					ArrayPos1++
					SaveRAM[ArrayPos1] = Stage.ListPos
					SaveRAM[ArrayPos1]++
					ArrayPos1++
					SaveRAM[ArrayPos1] = SpecialStage.TimeStones
					ArrayPos1++
					SaveRAM[ArrayPos1] = SpecialStage.ListPos
					ArrayPos1++
					SaveRAM[ArrayPos1] = Player.ScoreBonus
					ArrayPos1++
					SaveRAM[ArrayPos1] = MetalSonic_List
					SaveRAM[ArrayPos1] <<= 16
					SaveRAM[ArrayPos1] += Good_Future_List
					WriteSaveRAM()
				end if

#platform: Mobile
				if Options.GameMode == GAMEMODE_TRIALGAME
					// Set Trial Recoerds
					TimeAttack.Result = Stage.Seconds
					TimeAttack.Result *= 100
					TempValue0 = Stage.Minutes
					TempValue0 *= 6000
					TimeAttack.Result += TempValue0
					TimeAttack.Result += Stage.MilliSeconds
					switch TimeAttack.Round
					case 0
						if TimeAttack.Result < SaveRAM[48]		// PPZ Record
							SaveRAM[48] = TimeAttack.Result
						end if
						break
					case 1
						if TimeAttack.Result < SaveRAM[49]		// QQZ Record
							SaveRAM[49] = TimeAttack.Result
						end if
						break
					end switch
					WriteSaveRAM()
					Stage.ActiveList = PRESENTATION_STAGE
					Stage.ListPos = 11	// Purchase Screen
				end if
#endplatform

				if Options.GameMode == GAMEMODE_TIMEATTACK
#platform: Mobile	// Set Leaderboards (WP7)
					if Stage.PlayerListPos == 0				// PlayerName[SONIC]
						TempValue0 = Stage.ListPos
						TempValue0 %= 10
						TempValue0 >>= 2
						TempValue1 = Stage.ListPos
						TempValue1 /= 10
						TempValue1 *= 3
						TempValue0 += TempValue1
						TempValue0++
						TempValue1 = Stage.Seconds
						TempValue1 *= 100
						TempValue2 = Stage.Minutes
						TempValue2 *= 6000
						TempValue1 += TempValue2
						TempValue1 += Stage.MilliSeconds
						SetLeaderboard(TempValue0, TempValue1)
					end if								   
#endplatform	  
					TimeAttack.Result = Stage.Seconds
					TimeAttack.Result *= 100
					TempValue0 = Stage.Minutes
					TempValue0 *= 6000
					TimeAttack.Result += TempValue0
					TimeAttack.Result += Stage.MilliSeconds
					Stage.ActiveList = PRESENTATION_STAGE
					Stage.ListPos = 2	// Time Attack
					LoadStage()
				else
#platform: Standard
					TempValue0 = Engine.TrialMode
#endplatform

#platform: Mobile
					if Options.GameMode < GAMEMODE_TRIALGAME
						TempValue0 = Engine.TrialMode
					else
						TempValue0 = false
					end if
#endplatform

					if Stage.ListPos >= Stage.ListSize	// tldr; check if you are playing the trial
						TempValue0 = true
					end if
					if TempValue0 == false
						LoadStage()
					else
						Stage.ActiveList = PRESENTATION_STAGE
						Stage.ListPos = 1	// Menu
						LoadStage()
					end if
				end if
			end if
		end if
		break
	end switch
end sub


sub ObjectDraw
	if Good_Future == false
		// Character Got Through
		DrawSpriteScreenXY(0, Object.XPos, 65)
		DrawSpriteScreenXY(4, Object.MainTextXOffSet, 89)

		TempValue0 = Object.MainTextXOffSet
		TempValue0 += 128
		DrawSpriteScreenXY(5, TempValue0, 89)
	else
		// Character made a good future
		DrawSpriteScreenXY(20, Object.XPos, 65)
		DrawSpriteScreenXY(21, Object.MainTextXOffSet, 89)

		TempValue0 = Object.MainTextXOffSet
		TempValue0 += 140
		DrawSpriteScreenXY(5, TempValue0, 89)
	end if
	TempValue0 += 64
	DrawSpriteScreenXY(Stage.ActNo, TempValue0, 89)

	// Score
	DrawSpriteScreenXY(6, Object.ScoreXOffSet, 121)
	TempValue0 = Object.ScoreXOffSet
	TempValue0 += 163
	DrawNumbers(10, TempValue0, 121, Player.Score, 6, 8, 0)

	// Ring Bonus
	DrawSpriteScreenXY(7, Object.RingsXOffSet, 145)
	TempValue0 = Object.RingsXOffSet
	TempValue0 += 40
	DrawSpriteScreenXY(9, TempValue0, 145)
	TempValue0 += 123
	DrawNumbers(10, TempValue0, 145, Object.RingBonus, 5, 8, 0)

	// Time Bonus
	DrawSpriteScreenXY(8, Object.TimeXOffSet, 169)
	TempValue0 = Object.TimeXOffSet
	TempValue0 += 40
	DrawSpriteScreenXY(9, TempValue0, 169)
	TempValue0 += 123
	DrawNumbers(10, TempValue0, 169, Object.TimeBonus, 5, 8, 0)
end sub


sub ObjectStartup
	if Stage.PlayerListPos == 0
		LoadSpriteSheet("Global/Display.gif")
	else
		LoadSpriteSheet("Global/Display_t.gif")
	end if
	
	SpriteFrame(0, 0, 136, 16, 0, 206)		// #0  - Character Got
	SpriteFrame(0, 0, 8, 16, 194, 223)		// #1  - Act 1
	SpriteFrame(0, 0, 16, 16, 203, 223)		// #2  - Act 2
	SpriteFrame(0, 0, 16, 16, 220, 223)		// #3  - Act 3
	SpriteFrame(0, 0, 113, 16, 137, 206)	// #4  - Through
	SpriteFrame(0, 0, 56, 16, 137, 223)		// #5  - Zone
	SpriteFrame(0, 0, 39, 11, 1, 1)			// #6  - Score
	SpriteFrame(0, 0, 31, 11, 1, 33)		// #7  - Rings
	SpriteFrame(0, 0, 31, 11, 1, 17)		// #8  - Time
	SpriteFrame(0, 0, 41, 11, 1, 107)		// #9  - Bonus
	SpriteFrame(0, 0, 8, 11, 1, 50)			// #10 - 0
	SpriteFrame(0, 0, 8, 11, 10, 50)		// #11 - 1
	SpriteFrame(0, 0, 8, 11, 19, 50)		// #12 - 2
	SpriteFrame(0, 0, 8, 11, 28, 50)		// #13 - 3
	SpriteFrame(0, 0, 8, 11, 1, 62)			// #14 - 4
	SpriteFrame(0, 0, 8, 11, 10, 62)		// #15 - 5
	SpriteFrame(0, 0, 8, 11, 19, 62)		// #16 - 6
	SpriteFrame(0, 0, 8, 11, 28, 62)		// #17 - 7
	SpriteFrame(0, 0, 8, 11, 1, 74)			// #18 - 8
	SpriteFrame(0, 0, 8, 11, 10, 74)		// #19 - 9
	SpriteFrame(-60, 0, 256, 16, 0, 240)	// #20 - Sonic Made a Good
	SpriteFrame(-12, 0, 136, 16, 0, 223)	// #21 - Future In
end sub


sub RSDKDraw
	DrawSprite(0)
end sub


sub RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)

	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end sub
